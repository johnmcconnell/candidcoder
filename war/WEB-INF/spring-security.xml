<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<global-method-security pre-post-annotations="enabled" />

	<http use-expressions="true">
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
		<!--<intercept-url pattern="/secure/**" access="isAuthenticated()" />-->
		<!-- Allow all other requests. In a real application you should adopt a 
			whitelisting approach where access is not allowed by default -->
		<intercept-url pattern="/**" access="permitAll" />
		<form-login />
		<logout delete-cookies="JSESSIONID" />
		<remember-me />
		<!-- Uncomment to enable X509 client authentication support <x509 /> -->
		<!-- Uncomment to limit the number of sessions a user can have -->
		<session-management invalid-session-url="/timeout.jsp">
			<concurrency-control max-sessions="10"
				error-if-maximum-exceeded="true" />
		</session-management>

	</http>

	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin"
					password="password"
					authorities="ADMIN" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

</beans:beans>